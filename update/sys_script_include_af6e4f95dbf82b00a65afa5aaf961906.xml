<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_275826_vim.VendorInstanceManagementAjaxUtils</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>VendorInstanceManagementAjaxUtils</name>
        <script><![CDATA[var VendorInstanceManagementAjaxUtils = Class.create();
VendorInstanceManagementAjaxUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	checkVendorInstanceAvailability: function () {
		/**************************************
 		*****  Check for Vendor Instance  *****
 		*****  availaibility within       *****
 		*****  provided dates             *****
 		**************************************/
		var msg = 'In checkVendorInstanceAvailability [VendorInstanceManagementAjaxUtils]' + '\n';
		var boolIsAvailable = true;
		try {
			var utils = new VendorInstanceManagementUtils();
			var sidInstance = this.getParameter('sysparm_sid_instance');
			msg += 'sidInstance = ' + sidInstance + '\n';
			var gdtCheckout = new GlideDateTime(this.getParameter('sysparm_date_checkout'));
			msg += 'gdtCheckout = ' + gdtCheckout.getDisplayValue() + '\n';
			if (this.getParameter('sysparm_date_checkin') != undefined) {
				var gdtCheckin = new GlideDateTime(this.getParameter('sysparm_date_checkin'));
				msg += 'gdtCheckin = ' + gdtCheckin.getDisplayValue() + '\n';
				boolIsAvailable = utils.checkVendorInstanceAvailability(sidInstance, gdtCheckout, gdtCheckin);
			}  // if (this.getParameter('sysparm_date_checkin') != undefined)
			else {
				boolIsAvailable = utils.checkVendorInstanceAvailability(sidInstance, gdtCheckout);
			}  // else if (this.getParameter('sysparm_date_checkin') != undefined)
		}  // try
		catch (err) {
			msg += 'Error in checkVendorInstanceAvailability:  ' + err.message + '\n';
			gs.error(msg);
		}  // catch (err)
		finally {
			msg += 'boolIsAvailable = ' + boolIsAvailable.toString() + '\n';
			gs.debug(msg);
			if (this.debug) {
				gs.debug(msg);
			}  // if (this.debug)
			return boolIsAvailable;
		}  // finally
	},  // checkVendorInstanceAvailability
	
	type: 'VendorInstanceManagementAjaxUtils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>rpolicko</sys_created_by>
        <sys_created_on>2018-09-26 13:50:05</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>af6e4f95dbf82b00a65afa5aaf961906</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>VendorInstanceManagementAjaxUtils</sys_name>
        <sys_package display_value="Vendor Instance Management" source="x_275826_vim">84d3492bdbac23007c857fcfbf96199e</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Vendor Instance Management">84d3492bdbac23007c857fcfbf96199e</sys_scope>
        <sys_update_name>sys_script_include_af6e4f95dbf82b00a65afa5aaf961906</sys_update_name>
        <sys_updated_by>rpolicko</sys_updated_by>
        <sys_updated_on>2018-09-26 14:50:39</sys_updated_on>
    </sys_script_include>
</record_update>
